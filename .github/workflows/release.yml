name: Make new releases

on:
  push:
    branches: [main]

jobs:
  check-version:
    name: Check version number for changes
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.version_tag.outputs.tag }}
      release: ${{ steps.release.outputs.release }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    permissions:
      id-token: write
      contents: write

    steps:
    - name: Pull
      run: git clone https://github.com/quadraturerules/quadraturerules.git .
    - name: Set up Python 3.12
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Get latest tag
      id: release_tag
      run: echo -n "tag=$(git describe --tags `git rev-list --tags --max-count=1`)" >> $GITHUB_OUTPUT
    - name: Get version
      id: version_tag
      run: echo -n "tag=v$(cat VERSION)" >> $GITHUB_OUTPUT

    - name: Compare version numbers
      run: |
        if [ "${{ steps.release_tag.outputs.tag }}" = "${{ steps.version_tag.outputs.tag }}" ]; then
           echo "release=no" >> $GITHUB_OUTPUT
        else
           echo "release=yes" >> $GITHUB_OUTPUT
        fi
      id: release

  python-library:
    name: Release Python library
    runs-on: ubuntu-22.04
    if: needs.check-version.outputs.release == 'yes'
    permissions:
      id-token: write
    needs:
      - check-version
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/checkout@v4

      - run: |
          cd python
          python3 -m pip install .
        name: Install qrtools

      - run: |
          cd library
          python3 build.py python
        name: Build Python library
      - run: |
          cd library/python.build
          python3 -m pip install build
          python3 -m build .
        name: Build Python wheels

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: library/python.build/dist
        if: needs.check-version.outputs.release == 'yes'

  rust-library:
    name: Release Rust library
    runs-on: ubuntu-22.04
    if: needs.check-version.outputs.release == 'yes'
    permissions:
      id-token: write
    needs:
      - check-version
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/checkout@v4

      - run: |
          cd python
          python3 -m pip install .
        name: Install qrtools

      - run: |
          cd library
          python3 build.py rust
        name: Build Rust library
      - uses: katyo/publish-crates@v2
        with:
          registry-token: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          path: './library/rust.build'
        if: needs.check-version.outputs.release == 'yes'

  julia-library:
    name: Release Julia library
    runs-on: ubuntu-22.04
    if: needs.check-version.outputs.release == 'yes'
    permissions:
      id-token: write
    needs:
      - check-version
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/checkout@v4

      - run: |
          cd python
          python3 -m pip install .
        name: Install qrtools

      - run: |
          cd library
          python3 build.py julia
        name: Build Rust library

      - name: Clone Julia source repo
        run: git clone https://github.com/quadraturerules/TabulatedQuadratureRules.jl QR.jl
      - name: Copy Julia source
        run: cp -r library/julia.build/* QR.jl/
      - name: git add and commit
        run: |
          cd QR.jl
          git config --global user.email "julia@mscroggs.co.uk"
          git config --global user.name "GitHub Actions"
          git add .
          git commit -a -m "Update Julia source"
      - name: git push
        run: |
          cd QR.jl
          git remote set-url origin https://x-access-token:${{ secrets.JULIA_REPO_TOKEN }}@github.com/quadraturerules/QuadratureRulesDotOrg.jl
          git push

  cpp-library:
    name: Build C++ source for release
    runs-on: ubuntu-22.04
    if: needs.check-version.outputs.release == 'yes'
    permissions:
      id-token: write
    needs:
      - check-version
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/checkout@v4

      - run: |
          cd python
          python3 -m pip install .
        name: Install qrtools

      - run: |
          cd library
          python3 build.py cpp
        name: Build C++ library
      - run: |
          cd library/cpp.build
          tar -cvf quadraturerules-cpp-${{ needs.check-version.outputs.tag }}.tar.gz *
        name: Make tar.gz of source
      - uses: actions/upload-artifact@v4
        with:
          name: cpp_source
          path: library/cpp.build/quadraturerules-cpp-${{ needs.check-version.outputs.tag }}.tar.gz
          retention-days: 1

  c-library:
    name: Build C source for release
    runs-on: ubuntu-22.04
    if: needs.check-version.outputs.release == 'yes'
    permissions:
      id-token: write
    needs:
      - check-version
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/checkout@v4

      - run: |
          cd python
          python3 -m pip install .
        name: Install qrtools

      - run: |
          cd library
          python3 build.py c
        name: Build C library
      - run: |
          cd library/c.build
          tar -cvf quadraturerules-c-${{ needs.check-version.outputs.tag }}.tar.gz *
        name: Make tar.gz of source
      - uses: actions/upload-artifact@v4
        with:
          name: c_source
          path: library/c.build/quadraturerules-c-${{ needs.check-version.outputs.tag }}.tar.gz
          retention-days: 1

  fortran90-library:
    name: Build Fortran 90 source for release
    runs-on: ubuntu-22.04
    if: needs.check-version.outputs.release == 'yes'
    permissions:
      id-token: write
    needs:
      - check-version
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/checkout@v4

      - run: |
          cd python
          python3 -m pip install .
        name: Install qrtools

      - run: |
          cd library
          python3 build.py fortran90
        name: Build Fortran 90 library
      - run: |
          cd library/fortran90.build
          tar -cvf quadraturerules-fortran90-${{ needs.check-version.outputs.tag }}.tar.gz *
        name: Make tar.gz of source
      - uses: actions/upload-artifact@v4
        with:
          name: fortran90_source
          path: library/fortran90.build/quadraturerules-fortran90-${{ needs.check-version.outputs.tag }}.tar.gz
          retention-days: 1

  fortran77-library:
    name: Build Fortran 77 source for release
    runs-on: ubuntu-22.04
    if: needs.check-version.outputs.release == 'yes'
    permissions:
      id-token: write
    needs:
      - check-version
    steps:
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - uses: actions/checkout@v4

      - run: |
          python3 -m pip install fortran77punchcards
          cd python
          python3 -m pip install .
        name: Install qrtools and fortran77punchcards

      - run: |
          cd library
          python3 build.py fortran77
          cd fortran77.build
          python3 -m fortran77punchcards quadraturerules.f quadraturerules.png --width 400 --row-size 8
          python3 -m fortran77punchcards test.f test.png --width 400 --row-size 8
        name: Build Fortran 77 library
      - run: |
          cd library/fortran77.build
          tar -cvf quadraturerules-fortran77-${{ needs.check-version.outputs.tag }}.tar.gz *.png
        name: Make tar.gz of source
      - uses: actions/upload-artifact@v4
        with:
          name: fortran77_source
          path: library/fortran77.build/quadraturerules-fortran77-${{ needs.check-version.outputs.tag }}.tar.gz
          retention-days: 1

  make-release:
    name: Make release on GitHub
    runs-on: ubuntu-22.04
    if: needs.check-version.outputs.release == 'yes'
    permissions:
      id-token: write
      contents: write

    needs:
      - check-version
      - python-library
      - rust-library
      - julia-library
      - cpp-library
      - c-library
      - fortran90-library
      - fortran77-library
    steps:
      - name: Download C++ source
        uses: actions/download-artifact@v4
        with:
          name: cpp_source
      - name: Download C source
        uses: actions/download-artifact@v4
        with:
          name: c_source
      - name: Download Fortran 90 source
        uses: actions/download-artifact@v4
        with:
          name: fortran90_source
      - name: Download Fortran 77 source
        uses: actions/download-artifact@v4
        with:
          name: fortran77_source

      - name: Write version number into GITHUB_OUTPUT
        run: |
          VERSION=${{ needs.check-version.outputs.tag }}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "ersion=${VERSION:1}" >> $GITHUB_OUTPUT
        id: v
      - name: Make GitHub tag
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'refs/tags/${{ steps.v.outputs.version }}',
              sha: context.sha
            })

      - name: Make GitHub release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ steps.v.outputs.version }}
          tag_name: ${{ steps.v.outputs.version }}
          files: |
            quadraturerules-cpp-${{ steps.v.outputs.version }}.tar.gz
            quadraturerules-c-${{ steps.v.outputs.version }}.tar.gz
            quadraturerules-fortran90-${{ steps.v.outputs.version }}.tar.gz
            quadraturerules-fortran77-${{ steps.v.outputs.version }}.tar.gz
          body: |
            - [C source](https://github.com/quadraturerules/quadraturerules/releases/download/${{ steps.v.outputs.version }}/quadraturerules-c-${{ steps.v.outputs.version }}.tar.gz)
            - [C++ source](https://github.com/quadraturerules/quadraturerules/releases/download/${{ steps.v.outputs.version }}/quadraturerules-cpp-${{ steps.v.outputs.version }}.tar.gz)
            - [Fortran 77 source](https://github.com/quadraturerules/quadraturerules/releases/download/${{ steps.v.outputs.version }}/quadraturerules-fortran77-${{ steps.v.outputs.version }}.tar.gz)
            - [Fortran 90 source](https://github.com/quadraturerules/quadraturerules/releases/download/${{ steps.v.outputs.version }}/quadraturerules-fortran90-${{ steps.v.outputs.version }}.tar.gz)
            - [Julia package](https://juliahub.com/ui/Packages/General/TabulatedQuadratureRules)
            - [Python package](https://pypi.org/project/quadraturerules/${{ steps.v.outputs.version }}/)
            - [Rust crate](https://crates.io/crates/quadraturerules/${{ steps.v.outputs.ersion }})
